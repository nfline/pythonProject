1. 通过 IP 地址查找 NIC（网络接口）
bash
CopyInsert
# Resource Graph 查询
az graph query -q "Resources | where type =~ 'microsoft.network/networkinterfaces' | where properties.ipConfigurations[0].properties.privateIPAddress =~ '10.104.157.3' | project id, name, resourceGroup, vnetId = tostring(properties.ipConfigurations[0].properties.subnet.id)" --query "data" -o json

# 或者使用 Azure CLI
az network nic list --query "[?ipConfigurations[0].privateIpAddress=='10.104.157.3']" -o json
2. 从子网 ID 查找关联的 NSG
bash
CopyInsert
# 假设子网ID为: /subscriptions/sub-id/resourceGroups/rg-name/providers/Microsoft.Network/virtualNetworks/vnet-name/subnets/subnet-name

# 提取资源组、VNET名称和子网名称
resourceGroup="rg-name"
vnetName="vnet-name" 
subnetName="subnet-name"

# 使用 Azure CLI 查询子网详情
az network vnet subnet show --resource-group $resourceGroup --vnet-name $vnetName --name $subnetName --query "networkSecurityGroup.id" -o tsv
3. 直接查询 VNET 及其子网信息
bash
CopyInsert
# 查询所有 VNET
az graph query -q "Resources | where type =~ 'microsoft.network/virtualnetworks' | project id, name, resourceGroup, subnets=properties.subnets" --query "data" -o json

# 展开并查看所有子网
az graph query -q "Resources | where type =~ 'microsoft.network/virtualnetworks' | mv-expand subnet=properties.subnets | project vnetName=name, subnetName=subnet.name, subnetPrefix=subnet.properties.addressPrefix, nsgId=subnet.properties.networkSecurityGroup.id" --query "data" -o json
4. 通过 IP 地址查找包含它的子网
bash
CopyInsert
# 查询所有子网，然后手动过滤
az graph query -q "Resources | where type =~ 'microsoft.network/virtualnetworks' | mv-expand subnet=properties.subnets | project vnetName=name, subnetName=subnet.name, subnetPrefix=subnet.properties.addressPrefix, nsgId=subnet.properties.networkSecurityGroup.id" --query "data" -o json

# 然后针对返回的每个子网，根据 IP 和子网前缀手动检查 IP 是否在子网范围内

验证和测试
您可以手动运行以下命令来验证脚本找到的NSG信息是否正确：

查找使用特定IP的网络接口
bash
CopyInsert in Terminal
az network nic list --query "[?ipConfigurations[0].privateIpAddress=='10.104.157.3'].{id:id, name:name, nsgId:networkSecurityGroup.id}" -o json
查找包含特定IP的子网
bash
CopyInsert
# 获取所有子网信息
az network vnet list --query "[].{name:name, resourceGroup:resourceGroup, subnets:subnets[].{name:name, addressPrefix:addressPrefix, nsgId:networkSecurityGroup.id}}" -o json

# 找到含有指定IP的子网（需手动检查IP范围）
查询某个子网关联的NSG
bash
CopyInsert in Terminal
az network vnet subnet show --resource-group <资源组名称> --vnet-name <VNET名称> --name <子网名称> --query "networkSecurityGroup.id" -o tsv
后续步骤
现在脚本应该能够正确识别与目标IP相关的NSG，并将其存储在related_nsg_ids.json文件中。一旦找到NSG，脚本就会继续查询流日志配置，然后使用KQL查询相关的流量数据。

如果仍然遇到问题，可以检查日志输出，查看哪些步骤成功了，哪些步骤失败了。最常见的问题是权限不足或者资源配置不正确（比如NSG没有启用流日志）。

请再次运行脚本并查看是否能够正确找到NSG ID。如果还有问题，请告诉我具体的错误输出，我可以进一步帮助您排查。