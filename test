import subprocess
import requests

# ThousandEyes API 配置
TE_API_URL = "https://api.thousandeyes.com/v7"
TE_API_TOKEN = "your_thousandeyes_api_token"  # 在 ThousandEyes 账户设置中获取

def get_azure_ad_emails():
    """调用 PowerShell 脚本获取 Azure AD 组成员的电子邮件地址"""
    result = subprocess.run(
        ["powershell", "-ExecutionPolicy", "Bypass", "-File", "Get-AzureADGroupMembers.ps1"],
        capture_output=True, text=True
    )

    # 检查脚本是否成功执行
    if result.returncode != 0:
        print("Error executing PowerShell script:")
        print(result.stderr)
        return []

    # 处理输出，获取电子邮件列表
    emails = result.stdout.strip().split('\n')
    return emails

def get_thousandeyes_users():
    """获取 ThousandEyes 中的所有用户"""
    headers = {"Authorization": f"Bearer {TE_API_TOKEN}"}
    response = requests.get(f"{TE_API_URL}/users", headers=headers)
    response.raise_for_status()
    users = response.json().get("users", [])
    return {user["email"] for user in users}

def create_thousandeyes_user(name, email):
    """在 ThousandEyes 中创建新用户"""
    headers = {
        "Authorization": f"Bearer {TE_API_TOKEN}",
        "Content-Type": "application/json"
    }
    data = {
        "name": name,
        "email": email,
        # 根据需要设置其他字段，例如角色、账户组等
    }
    response = requests.post(f"{TE_API_URL}/users", headers=headers, json=data)
    response.raise_for_status()
    return response.json()

def main():
    # 从 Azure AD 获取用户电子邮件列表
    azure_ad_emails = get_azure_ad_emails()

    # 获取 ThousandEyes 中的现有用户电子邮件列表
    te_emails = get_thousandeyes_users()

    # 找出 Azure AD 中但不在 ThousandEyes 中的用户
    missing_emails = set(azure_ad_emails) - te_emails

    # 为缺失的用户创建新账户
    for email in missing_emails:
        name = "Name from Azure AD"  # 从 Azure AD 获取用户的显示名称
        create_thousandeyes_user(name, email)
        print(f"Created user {name} with email {email} in ThousandEyes.")

if __name__ == "__main__":
    main()


\\\\azure
# 连接到 Azure AD
Connect-AzureAD

# 设置目标组的显示名称
$groupName = "Your-Group-Name"

# 获取组对象
$group = Get-AzureADGroup -Filter "DisplayName eq '$groupName'"

# 确认组存在
if ($group -ne $null) {
    # 获取组成员
    $members = Get-AzureADGroupMember -ObjectId $group.ObjectId

    # 输出成员的邮件地址
    $members | ForEach-Object {
        $user = Get-AzureADUser -ObjectId $_.ObjectId
        if ($user.Mail) {
            Write-Output $user.Mail
        }
    }
} else {
    Write-Output "未找到名为 '$groupName' 的组。"
}
